% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_plot_functions_max_rank.R
\name{ps_streaks_get_max_rank_by_sampling}
\alias{ps_streaks_get_max_rank_by_sampling}
\title{ps_streaks_get_max_rank_by_sampling}
\usage{
ps_streaks_get_max_rank_by_sampling(
  lzy_streaks,
  n,
  min_year,
  max_year,
  teams,
  levels,
  scaling
)
}
\arguments{
\item{lzy_streaks}{Lazy streaks table}

\item{n}{Function will maximize value of \code{n}th highest rank}

\item{min_year}{Minimum year for filter}

\item{max_year}{Maximum year for filter}

\item{teams}{Vector of team IDs for filter.}

\item{levels}{Intensity levels for the sampling, e.g. \code{c(25,50,75)}}

\item{scaling}{Scaling factor, e.g. \code{1.5}}
}
\value{
Estimate of maximum value
}
\description{
Give an estimate of the rank returned by \code{ps_streaks_get_max_rank_simple}
using this method:
\itemize{
\item First: Apply the algorithm of \code{ps_streaks_get_max_rank_simple} to a limited
set of intensity levels (e.g. \code{c(25,50,75)} instead of \code{1:101}).
\item Second, increase the returned rank and increase it by a scaling factor
(e.g. \code{1.5}).
\item Third, restrict the full streaks table to \code{Rank} values below the scaled
initial estimate.
\item Finally, apply \code{ps_streaks_get_max_rank_simple} to the restricted streak
table, this time across all intensity levels.
}
}
\details{
Notes:
\itemize{
\item This estimate will always be less than or equal to the true value.
\item This function calls \code{ps_streaks_get_max_rank_simple} twice, but each time
with a filter applied to the \code{lzy_streaks_tbl}.  It is less efficient
than \code{ps_streaks_get_max_rank_simple} on smaller datasets, but much faster
on larger datasets.
\item Increasing the scaling factor or the intensity sample space increases
the accuracy at the cost of speed.
\item Smaller datasets require larger scaling factors, and larger datasets
require smaller scaling factors.
}
}
